# =============================================================================
# GitHub Pages Deployment Workflow
# =============================================================================
# 
# This workflow automatically builds and deploys your static site to GitHub Pages
# whenever you push to the main branch.
# 
# ðŸŽ¯ Features:
# - Automatic deployment on push to main
# - Build optimization for production
# - Caching for faster builds
# - Deploy previews for pull requests (optional)
# 
# ðŸ“š Setup Instructions:
# 1. Go to Settings > Pages in your GitHub repository
# 2. Set Source to "GitHub Actions"
# 3. Push to main branch to trigger deployment
# 
# ðŸ’¡ Your site will be available at:
# https://[your-username].github.io/[repository-name]/
# =============================================================================

name: Deploy to GitHub Pages

# When to run this workflow
on:
  # Run on pushes to main branch
  push:
    branches: [ main ]
  
  # Run on manual trigger
  workflow_dispatch:

# Set permissions for GITHUB_TOKEN
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one deployment at a time
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    
    steps:
      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod
      
      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      # Cache dependencies
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      # Install dependencies
      - name: Install dependencies
        run: |
          if [ -f "package-lock.json" ]; then
            npm ci
          else
            npm install
          fi
      
      # Run linters (optional - remove if you want faster deployments)
      - name: Run linters
        run: |
          npm run lint || echo "Linting warnings ignored"
      
      # Build the site
      - name: Build site
        run: npm run build
        env:
          NODE_ENV: production
      
      # Upload build artifacts
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist
  
  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

# =============================================================================
# Optional: Deploy Preview for Pull Requests
# =============================================================================
# 
# Uncomment the following workflow to enable deploy previews for PRs.
# This requires additional setup with a service like Netlify or Vercel.
# 
# on:
#   pull_request:
#     types: [opened, synchronize, reopened]
# 
# jobs:
#   deploy-preview:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
#       - uses: actions/setup-node@v4
#         with:
#           node-version: '20'
#       - run: npm ci
#       - run: npm run build
#       - name: Deploy preview
#         run: |
#           # Add your preview deployment command here
#           echo "Deploy preview to staging environment"