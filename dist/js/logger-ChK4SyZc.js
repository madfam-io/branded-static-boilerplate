const e={},t=function(t,n,r){let o=Promise.resolve();if(n&&n.length>0){let t=function(e){return Promise.all(e.map((e=>Promise.resolve(e).then((e=>({status:"fulfilled",value:e})),(e=>({status:"rejected",reason:e}))))))};document.getElementsByTagName("link");const r=document.querySelector("meta[property=csp-nonce]"),l=(null==r?void 0:r.nonce)||(null==r?void 0:r.getAttribute("nonce"));o=t(n.map((t=>{if((t=function(e){return"/branded-static-boilerplate/"+e}(t))in e)return;e[t]=!0;const n=t.endsWith(".css"),r=n?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${t}"]${r}`))return;const o=document.createElement("link");return o.rel=n?"stylesheet":"modulepreload",n||(o.as="script"),o.crossOrigin="",o.href=t,l&&o.setAttribute("nonce",l),document.head.appendChild(o),n?new Promise(((e,n)=>{o.addEventListener("load",e),o.addEventListener("error",(()=>n(new Error(`Unable to preload CSS for ${t}`))))})):void 0})))}function l(e){const t=new Event("vite:preloadError",{cancelable:!0});if(t.payload=e,window.dispatchEvent(t),!t.defaultPrevented)throw e}return o.then((e=>{for(const t of e||[])"rejected"===t.status&&l(t.reason);return t().catch(l)}))},n={log:(...e)=>{},warn:(...e)=>{},error:(...e)=>{},info:(...e)=>{},debug:(...e)=>{},table:e=>{},group:e=>{},groupEnd:()=>{}};export{t as _,n as l};
