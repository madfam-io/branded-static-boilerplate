const n=(n,e,o)=>{const r=(n=>`\n    try {\n      ${n}\n    } catch (error) {\n      // Capture error without logging to console\n      const errorMessage = 'JavaScript Error: ' + error.message;\n      window.capturedLogs.push({\n        type: 'error',\n        message: errorMessage,\n        timestamp: Date.now()\n      });\n\n      // Send to parent for display\n      if (window.parent && window.parent.postMessage) {\n        window.parent.postMessage({\n          type: 'console',\n          method: 'error',\n          message: errorMessage\n        }, '*');\n      }\n    }`)(o);return`\n<!DOCTYPE html>\n<html lang="en">\n<head>\n  <meta charset="UTF-8">\n  <meta name="viewport" content="width=device-width, initial-scale=1.0">\n  <title>BSB Code Preview</title>\n  <style>\n    body {\n      margin: 16px;\n      font-family: system-ui, -apple-system, sans-serif;\n      line-height: 1.6;\n    }\n    ${e}\n  </style>\n</head>\n<body>\n  ${n}\n  <script>\n\n    // Console capture setup\n    const originalConsole = {\n      log: console.log,\n      warn: console.warn,\n      error: console.error\n    };\n\n    window.capturedLogs = [];\n\n    ['log', 'warn', 'error'].forEach(method => {\n      console[method] = function(...args) {\n        window.capturedLogs.push({\n          type: method,\n          message: args.join(' '),\n          timestamp: Date.now()\n        });\n        originalConsole[method].apply(console, args);\n\n        // Send to parent\n        if (window.parent && window.parent.postMessage) {\n          window.parent.postMessage({\n            type: 'console',\n            method: method,\n            message: args.join(' ')\n          }, '*');\n        }\n      };\n    });\n\n    // Error handling - capture errors without logging to console\n    window.addEventListener('error', event => {\n      const message = \`\${event.filename}:\${event.lineno} - \${event.message}\`;\n      // Store error for debugging without console.error\n      window.capturedLogs.push({\n        type: 'error',\n        message: message,\n        timestamp: Date.now()\n      });\n\n      // Send to parent for display\n      if (window.parent && window.parent.postMessage) {\n        window.parent.postMessage({\n          type: 'console',\n          method: 'error',\n          message: message\n        }, '*');\n      }\n\n      // Prevent default error logging\n      event.preventDefault();\n      return true;\n    });\n${r}\n  <\/script>\n</body>\n</html>`.trim()};export{n as generatePreviewDocument};
